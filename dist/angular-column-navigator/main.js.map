{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/enrollment.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { RegisterComponent } from './register/register.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport {routing} from './app.routing';\nimport {CourseServiceClient} from './services/course.service.client';\nimport {UserServiceClient} from './services/user.service.client';\nimport {SectionServiceClient} from './services/section.service.client';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {EnrollmentServiceClient} from './services/enrollment.service.client';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport {WidgetServiceClient} from './services/widget.service.client';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    WhiteBoardComponent,\n    ProfileComponent,\n    LoginComponent,\n    CourseViewerComponent,\n    SectionListComponent,\n    CourseGridComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseServiceClient,\n    UserServiceClient,\n    SectionServiceClient,\n    EnrollmentServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    WidgetServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { WhiteBoardComponent } from './white-board/white-board.component';\r\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {SectionListComponent} from './section-list/section-list.component';\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: WhiteBoardComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'course/:courseId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/section', component: SectionListComponent },\r\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\r\n  { path: '**', component: WhiteBoardComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"\\r\\n.linkButton{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\"","module.exports = \"<link   rel=\\\"stylesheet\\\"\\n        type=\\\"text/css\\\"\\n        href=\\\"../../assets/dist/css/bootstrap.css\\\"/>\\n<h2>Course Grid</h2>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <p class=\\\"card-text\\\"> Created: {{course.created}}</p>\\n        <a routerLink=\\\"/course/{{course.id}}\\\"\\n           class=\\\"btn btn-primary\\\">Course Info</a>\\n        <a *ngIf='userId !=\\\"\\\" && role ==\\\"student\\\" && coursesEnrolledIn.indexOf(course.id) == -1' routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-primary linkButton\\\">Enroll</a>\\n        <a *ngIf='userId !=\\\"\\\" && role ==\\\"student\\\" && coursesEnrolledIn.indexOf(course.id) != -1' routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-success linkButton\\\">Enrolled</a>\\n        <a *ngIf='userId !=\\\"\\\" && role ==\\\"admin\\\"' routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-warning linkButton\\\">Edit Sections</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {EnrollmentServiceClient} from '../services/enrollment.service.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private userService: UserServiceClient,\n              private enrollmentService: EnrollmentServiceClient) {\n  }\n\n  courses: Course[] = [];\n  userId='';\n  role=\"\";\n  coursesEnrolledIn=[];\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n        courses.map((course) =>\n        {\n          course.created = new Date(course.created).toLocaleString()\n        }\n        )\n\n      });\n\n    this.userService\n      .profile()\n      .then(user => {\n        if (user._id != null && user._id != undefined) {\n          this.userId = user._id;\n          this.role=user.role;\n          this.getEnrolledSections();\n        }\n      })\n  }\n\n  getEnrolledSections() {\n    this.enrollmentService.findSectionsForStudent(this.userId).then(\n      (enrollments) => {\n        this.coursesEnrolledIn = [];\n        enrollments.map((enrollment) => {\n          this.coursesEnrolledIn.push(enrollment.section.courseId)\n          })\n        })\n  }\n}\n\n","module.exports = \".moduleList{\\r\\n  border-right: 2px solid black;\\r\\n  border-top: 2px solid black;\\r\\n  height: 100vh;\\r\\n}\\r\\n\\r\\n\\r\\n.list-group-item.hover{\\r\\n  background-color: grey;\\r\\n  outline-color: black;\\r\\n}\\r\\n\\r\\n\\r\\n.moduleSelected{\\r\\n  background-color: gray;\\r\\n  outline-color: black;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.lessonSelected{\\r\\n  background-color: gray;\\r\\n  outline-color: black;\\r\\n}\\r\\n\\r\\n\\r\\n.list-group-item{\\r\\n  margin-top: 15px;\\r\\n  box-shadow: 10px 5px black;\\r\\n}\\r\\n\\r\\n\\r\\n.nav-link{\\r\\n  color: #005cbf;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.btn{\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\"","module.exports = \"\\n<link   rel=\\\"stylesheet\\\"\\n        type=\\\"text/css\\\"\\n        href=\\\"../../assets/dist/css/bootstrap.css\\\"/>\\n<div class=\\\"container-fluid\\\">\\n  <h1 *ngIf=\\\"course != undefined\\\">{{course.title}}</h1>\\n  <h1 *ngIf=\\\"course == undefined\\\">Course Title</h1>\\n  <hr>\\n\\n  <a routerLink=\\\"/home\\\"><button class=\\\"btn btn-primary\\\">Home</button></a>\\n  <a *ngIf=\\\"course != undefined\\\" routerLink=\\\"/course/{{course.id}}/section\\\"><button class=\\\"btn btn-primary\\\">Enrollment</button></a>\\n  <br>\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-3 moduleList\\\">\\n      <h2>Modules</h2>\\n      <hr>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\" style=\\\"border-color: gray;\\\" (click)=\\\"selectModule(module.id)\\\" *ngFor=\\\"let module of modules\\\">\\n          <div *ngIf=\\\"module.id == moduleId\\\" class=\\\"moduleSelected\\\">\\n            {{module.title}}\\n          </div>\\n          <div *ngIf=\\\"module.id != moduleId\\\">\\n            {{module.title}}\\n          </div>\\n        </li>\\n\\n      </ul>\\n    </div>\\n    <div class=\\\"col-9\\\">\\n      <h2 *ngIf=\\\"selectedModule != undefined\\\">Lessons for {{selectedModule.title}}</h2>\\n      <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"nav-item\\\"  (click)=\\\"selectLesson(lesson.id)\\\" *ngFor=\\\"let lesson of lessons\\\">\\n          <div *ngIf=\\\"lesson.id == lessonId\\\" style=\\\"border-color: gray;\\\" class=\\\"nav-link lessonSelected\\\">\\n            {{lesson.title}}\\n          </div>\\n          <div *ngIf=\\\"lesson.id != lessonId\\\" style=\\\"border-color: gray;\\\" class=\\\"nav-link\\\">\\n            {{lesson.title}}\\n          </div>\\n        </li>\\n      </ul>\\n\\n      <div class=\\\"container\\\">\\n        <div  class=\\\"panel-group\\\">\\n          <div *ngIf=\\\"widgets.length > 0\\\">\\n          <br>\\n          <h3>Lesson Homepage</h3>\\n          <hr>\\n          <br>\\n          </div>\\n          <div *ngFor=\\\"let widget of widgets\\\" class=\\\"panel panel-default\\\">\\n            <div *ngIf=\\\"widget.className=='list'\\\" class=\\\"panel-body\\\">\\n              <ol *ngIf=\\\"widget.listType =='ordered'\\\">\\n                <li *ngFor=\\\"let text of widget.text.split('\\\\n')\\\">\\n                  {{text}}\\n                </li>\\n              </ol>\\n              <ul *ngIf=\\\"widget.listType =='unordered'\\\">\\n                <li *ngFor=\\\"let text of widget.text.split('\\\\n')\\\">\\n                  {{text}}\\n                </li>\\n              </ul>\\n            </div>\\n            <div *ngIf=\\\"widget.className=='heading'\\\" class=\\\"panel-body\\\">\\n              <h1 *ngIf=\\\"widget.size==1\\\"> {{widget.text}}</h1>\\n              <h2 *ngIf=\\\"widget.size==2\\\"> {{widget.text}}</h2>\\n              <h3 *ngIf=\\\"widget.size==3\\\"> {{widget.text}}</h3>\\n            </div>\\n\\n            <div *ngIf=\\\"widget.className=='paragraph'\\\" class=\\\"panel-body\\\">\\n              <p>{{widget.text}}</p>\\n            </div>\\n\\n            <div *ngIf=\\\"widget.className=='image'\\\" class=\\\"panel-body\\\">\\n              <img src={{widget.src}} width={{widget.width}} height={{widget.height}}/>\\n            </div>\\n\\n            <div *ngIf=\\\"widget.className=='link'\\\" class=\\\"panel-body\\\">\\n              <a href={{widget.href}}>{{widget.text}}</a>\\n            </div>\\n          </div>\\n\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\nimport {ModuleServiceClient} from '../services/module.service.client';\nimport {LessonServiceClient} from '../services/lesson.service.client';\nimport {WidgetServiceClient} from '../services/widget.service.client';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  courseId = undefined;\n  moduleId = undefined;\n  lessonId = undefined;\n  //course: Course = new Course();\n  course = undefined;\n  modules=[];\n  selectedModule = undefined;\n  lessons=[];\n  widgets=[];\n  constructor(private service: CourseServiceClient,\n              private moduleService: ModuleServiceClient,\n              private lessonService: LessonServiceClient,\n              private widgetService: WidgetServiceClient,\n              private route: ActivatedRoute) {\n\n  }\n\n\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course =>\n      {\n        this.course = course;\n        this.modules=[];\n        this.lessons=[];\n        this.widgets=[];\n        this.moduleId = undefined;\n        this.lessonId = undefined;\n        this.selectedModule = undefined;\n      })\n      .then(()=> {\n        this.moduleService.findModulesForCourse(this.courseId).then(\n          (modules) =>{\n            this.modules = modules;\n          }\n\n        )\n      });\n  }\n\n  selectModule(moduleId){\n    this.lessons=[];\n    this.widgets=[];\n    this.lessonId = undefined;\n    this.moduleId = moduleId;\n    this.moduleService.findModuleById(this.moduleId).then((module) =>{\n      this.selectedModule = module;\n    });\n    this.lessonService.findLessonsForModule(this.courseId,this.moduleId).then((lessons) =>\n      {this.lessons = lessons;}\n    )\n\n\n  }\n\n  selectLesson(lessonId){\n    this.widgets=[];\n    this.lessonId = lessonId;\n    this.widgetService.findWidgetsForLesson(this.courseId,this.moduleId,this.lessonId).then((widgets) =>\n    {\n\n      this.widgets = widgets;\n    })\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params =>\n    {\n\n      this.courseId = params['courseId'];\n      this.loadCourse(this.courseId);\n\n    });\n\n\n\n\n\n  }\n\n}\n","module.exports = \"input[type=text], input[type=password] {\\r\\n  width: 100%;\\r\\n  padding: 15px;\\r\\n  margin: 5px 0 10px 0;\\r\\n  display: inline-block;\\r\\n  border: none;\\r\\n  background: #f1f1f1;\\r\\n}\\r\\n\\r\\ninput[type=text]:focus, input[type=password]:focus {\\r\\n  background-color: #ddd;\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.warningText{\\r\\n  color: red;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.linkButton{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Whiteboard Login</h1>\\n  <a routerLink=\\\"/register\\\"><button class=\\\"btn btn-primary\\\">Link To Register</button></a>\\n  <a routerLink=\\\"/home\\\"><button class=\\\"btn btn-primary linkButton\\\">Link To Home</button></a>\\n  <p>Please Enter Your Username and Password</p>\\n  <hr>\\n  <label><b>Username</b></label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"Username\\\"\\n         class=\\\"form-control\\\"/>\\n  <div class=\\\"warningText\\\" *ngIf='tried == true && username.length < 1'> Username Cannot Be Empty</div>\\n  <label><b>Password</b></label>\\n  <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"Password\\\"\\n         class=\\\"form-control\\\"/>\\n  <div class=\\\"warningText\\\" *ngIf='tried == true && password.length < 1'> Password Cannot Be Empty</div>\\n  <br>\\n  <div class=\\\"warningText\\\" *ngIf='mismatch == true'> Invalid Username and Password Combination</div>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username='';\n  password='';\n  tried = false;\n  mismatch = false;\n  login(username, password) {\n    this.tried = true;\n    if(username.length < 1){\n      alert('Missing Username Field')\n    }\n    else if(password.length < 1){\n      alert('Missing Password Field')\n    }\n    else {\n      this.service\n        .login(username, password)\n        .then((response) => {\n          if(response == null){\n            this.mismatch = true;\n            alert('Invalid Username and Password Combination');\n          }\n          else {\n            this.router.navigate(['profile']);\n          }\n        });\n    }\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"input[type=text], input[type=password] {\\r\\n  width: 100%;\\r\\n  padding: 15px;\\r\\n  margin: 5px 0 10px 0;\\r\\n  display: inline-block;\\r\\n  border: none;\\r\\n  background: #f1f1f1;\\r\\n}\\r\\n\\r\\ninput[type=text]:focus, input[type=password]:focus {\\r\\n  background-color: #ddd;\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.logout{\\r\\n  cursor:pointer;\\r\\n  -webkit-text-decoration-color: blue;\\r\\n          text-decoration-color: blue;\\r\\n  text-decoration:underline;\\r\\n}\\r\\n\\r\\n.logout:hover {\\r\\n  text-decoration:none;\\r\\n  text-shadow: 1px 1px 1px #555;\\r\\n}\\r\\n\\r\\n.linkButton{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.section{\\r\\n  float: right;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf='userId != \\\"\\\"' class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n  <a routerLink=\\\"/home\\\"><button class=\\\"btn btn-primary\\\">Home</button></a>\\n  <a class=\\\"logout\\\" (click)=\\\"logout()\\\"><button class=\\\"btn btn-danger linkButton\\\">Logout</button></a>\\n  <br>\\n  <label><b>Username</b></label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"Username\\\"\\n         class=\\\"form-control\\\"\\n         readonly/>\\n  <label><b>First Name</b></label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"First Name\\\"\\n         class=\\\"form-control\\\"/>\\n  <label><b>Last Name</b></label>\\n  <input type=\\\"text\\\"  [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"Last Name\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n\\n  <h2>Sections ({{sections.length}})</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n      {{enrollment.section.name}}\\n      ({{enrollment.section.currentSeats + ' seats remaining'}})\\n      <a routerLink=\\\"/course/{{enrollment.section.courseId}}/section\\\"><button class=\\\"btn btn-primary section\\\">Edit Enrollment</button></a>\\n\\n    </li>\\n  </ul>\\n\\n\\n\\n\\n</div>\\n\\n<div *ngIf='userId == \\\"\\\"' class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n  <a routerLink=\\\"/home\\\"><button class=\\\"btn btn-primary\\\">Home</button></a>\\n  <a routerLink=\\\"/login\\\"><button class=\\\"btn btn-primary linkButton\\\">Link To Login Page</button></a>\\n  <br>\\n\\n  You are Currently Not Logged In! Please log in to see profile.\\n\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../models/user.model.client\";\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {Router} from \"@angular/router\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\nimport {EnrollmentServiceClient} from '../services/enrollment.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private enrollmentService: EnrollmentServiceClient,\n              private router: Router) {\n  }\n\n  user = {};\n  userId = \"\";\n  username;\n  firstName;\n  lastName;\n  password;\n  enrolledSections =[]\n  sections = [];\n\n\n  update() {\n    const user = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n    };\n\n    this.service.updateUser(user).then(() => {\n      this.service.findUserById(this.userId)\n        .then((user) => {\n\n          this.firstName = user.firstName;\n          if (this.firstName == undefined || this.firstName == null) {\n            this.firstName = '';\n          }\n          this.lastName = user.lastName;\n          if (this.lastName == undefined || this.lastName == null) {\n            this.lastName = '';\n          }\n        });\n    })\n\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        this.username = user.username;\n        if (user._id != null && user._id != undefined) {\n          this.userId = user._id;\n          this.service.findUserById(this.userId)\n            .then((user) => {\n\n              this.firstName = user.firstName;\n              if (this.firstName == undefined || this.firstName == null) {\n                this.firstName = '';\n              }\n              this.lastName = user.lastName;\n              if (this.lastName == undefined || this.lastName == null) {\n                this.lastName = '';\n              }\n            });\n        }\n        this.enrollmentService\n          .findSectionsForStudent(this.userId)\n          .then(sections => {\n              this.sections = sections;\n            }\n          )\n\n      })\n\n  }\n}\n","module.exports = \"input[type=text], input[type=password] {\\r\\n  width: 100%;\\r\\n  padding: 15px;\\r\\n  margin: 5px 0 10px 0;\\r\\n  display: inline-block;\\r\\n  border: none;\\r\\n  background: #f1f1f1;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\ninput[type=text]:focus, input[type=password]:focus {\\r\\n  background-color: #ddd;\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.warningText{\\r\\n  color: red;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nbutton{\\r\\n  margin-top:20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n  <a routerLink=\\\"/login\\\"><button class=\\\"btn btn-primary\\\">Link To Login Page</button></a>\\n  <br>\\n  <a routerLink=\\\"/home\\\"><button class=\\\"btn btn-primary\\\">Link to Homepage</button></a>\\n  <p>Please fill in this form to create an account.</p>\\n  <hr>\\n\\n  <label><b>Username</b></label>\\n  <input [(ngModel)]=\\\"username\\\"\\n         type=\\\"text\\\"\\n         placeholder=\\\"Username\\\"\\n         class=\\\"form-control\\\"\\n         required/>\\n  <div class=\\\"warningText\\\" *ngIf='username === undefined || username.length < 1'> Username Cannot Be Empty</div>\\n\\n  <label><b>Password</b></label>\\n  <input [(ngModel)]=\\\"password\\\"\\n         type=\\\"password\\\"\\n         placeholder=\\\"Password\\\"\\n         class=\\\"form-control\\\"\\n         required/>\\n  <div class=\\\"warningText\\\" *ngIf='password=== undefined || password.length < 1'> Password Cannot Be Empty</div>\\n  <label><b>Verify Password</b></label>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         type=\\\"password\\\"\\n         placeholder=\\\"Verify Password\\\"\\n         class=\\\"form-control\\\"\\n         required/>\\n  <div class=\\\"warningText\\\" *ngIf='password != password2'> Passwords Must Match</div>\\n\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {serializePath} from '@angular/router/src/url_tree';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  register(username, password, password2) {\n    if(username === undefined || username.length < 1 ||\n      password === undefined || password.length < 1 ||\n    password != password2){\n      alert(\"One or more fields needs to be fixed (Follow the instructions in red)\")\n    }\n    else {\n      this.service.findUserByUsername(username).then((response) => {\n        if (response === null) {\n          this.service\n            .createUser(username, password)\n            .then(() =>\n              this.router.navigate(['profile']));\n        }\n        else {\n          alert(\"This Username has been taken already!\")\n\n        }\n      })\n    }\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"input[type=text], input[type=password] {\\r\\n  width: 100%;\\r\\n  padding: 15px;\\r\\n  margin: 5px 0 10px 0;\\r\\n  display: inline-block;\\r\\n  border: none;\\r\\n  background: #f1f1f1;\\r\\n}\\r\\n\\r\\ninput[type=text]:focus, input[type=password]:focus {\\r\\n  background-color: #ddd;\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.warningText{\\r\\n  color: red;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.card-body{\\r\\n  box-shadow: 5px 5px black;\\r\\n  height: 150px;\\r\\n  background-color: lightblue;\\r\\n}\\r\\n\"","module.exports = \"<link   rel=\\\"stylesheet\\\"\\n        type=\\\"text/css\\\"\\n        href=\\\"../../assets/dist/css/bootstrap.css\\\"/>\\n<div class=\\\"container-fluid\\\">\\n  <h1>Sections for course: {{courseId}}</h1>\\n  <a routerLink=\\\"/home\\\"><button class=\\\"btn btn-primary\\\">Home</button></a>\\n  <br>\\n  <br>\\n  <div *ngIf=\\\"role == 'admin'\\\">\\n  <input type='text' [(ngModel)]=\\\"sectionName\\\"\\n         placeholder=\\\"Section Name\\\"\\n         class=\\\"form-control\\\">\\n    <div class=\\\"warningText\\\" *ngIf='sectionName.length < 1'> Section Name Cannot Be Empty</div>\\n  <input type='text' [(ngModel)]=\\\"seats\\\"\\n         placeholder=\\\"Seats available\\\"\\n         class=\\\"form-control\\\">\\n    <div class=\\\"warningText\\\" *ngIf='seats.length < 1'> Seats Cannot Be Empty</div>\\n    <div class=\\\"warningText\\\" *ngIf='seatsNotCorrect()'> Seats Must Be A Number Greater Than 0</div>\\n  <button (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n    Add Section\\n  </button>\\n    <br>\\n  </div>\\n  <div *ngIf=\\\"role == ''\\\"><p>Please login to enroll in a section!</p><br></div>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let section of sections\\\" class=\\\"col-sm-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h2 class=\\\"card-title\\\">{{section.name}} </h2>\\n          <p> {{section.currentSeats}} Seats Left</p>\\n          <button *ngIf=\\\"enrolledSection == undefined && section.currentSeats > 0\\n          && role =='student'\\\" (click)=\\\"enroll(section)\\\"\\n                  class=\\\" btn btn-primary\\\">Enroll</button>\\n          <button *ngIf=\\\"section._id == enrolledId\\\" (click)=\\\"unroll(section)\\\"\\n                  class=\\\" btn btn-danger\\\">Unroll</button>\\n          <button *ngIf=\\\"role=='admin'\\\" (click)=\\\"deleteSection(section._id)\\\"\\n                  class=\\\" btn btn-danger\\\">Delete Section</button>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {EnrollmentServiceClient} from '../services/enrollment.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private enrollmentService: EnrollmentServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n\n  }\n\n  sectionName = '';\n  seats = '';\n  role='';\n  courseId = '';\n  enrolledSection = undefined;\n  enrolledId = undefined;\n  sections = [];\n  userId = '';\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then(user => {\n        this.userId = user._id;\n        this.role = user.role;\n        this.route.params.subscribe(params => {\n          this.courseId = params['courseId'];\n          this.loadSections(params['courseId']);\n        })\n\n      });\n\n\n  }\n\n  deleteSection(sectionId){\n    if(this.role=='admin'){\n      this.sectionService.deleteSectionById(sectionId).then(() =>{\n        this.sections = this.sections.filter(section => section._id != sectionId);\n\n      })\n    }\n  }\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .sectionService\n      .findSectionsForCourse(courseId)\n      .then(sections =>\n      {\n        this.sections = sections;\n        this.getEnrolledSections()});\n  }\n\n  getEnrolledSections() {\n    this.enrollmentService.findSectionsForStudent(this.userId).then(\n      (enrollments) => {\n        this.enrolledSection = undefined;\n        this.enrolledId = undefined;\n        enrollments.map((enrollment) => {\n          this.sections.map((section) => {\n            if (enrollment.section._id == section._id) {\n              this.enrolledSection = section;\n              this.enrolledId = section._id;\n            }\n          })\n        })\n      })\n  }\n\n  seatsNotCorrect(){\n    return (isNaN(Number(this.seats)) || Number(this.seats) <= 0)\n  }\n\n\n\n  createSection(sectionName, seats) {\n    if(sectionName =='' || seats == ''){\n      alert('Both Fields Must not be Empty')\n    }\n    else if(isNaN(Number(seats))){\n      alert('Seats Must be A Number')\n    }\n    else if(Number(seats) <= 0){\n      alert('Seats Must Be Greater than Zero')\n    }\n    else {\n      this\n        .sectionService\n        .createSection(this.courseId, sectionName, seats)\n        .then(() => {\n          this.loadSections(this.courseId);\n        });\n    }\n  }\n\n  enroll(section) {\n    // alert(section._id);\n    if (this.userId != '') {\n      this.enrollmentService\n        .enrollStudentInSection(section._id, this.userId)\n        .then((response) => {\n          this.router.navigate(['profile']);\n        });\n    }\n  }\n\n  unroll(section){\n    this.enrollmentService.deleteEnrollment(this.enrolledId,this.userId).then(() =>{\n      this.loadSections(this.courseId);\n    })\n  }\n\n\n}\n","export class CourseServiceClient {\r\n  COURSE_URL = 'https://webdev-zhao-huang-summer2018.herokuapp.com/api/course';\r\n  findAllCourses() {\r\n    return fetch(this.COURSE_URL)\r\n      .then(response => response.json());\r\n  }\r\n  findCourseById(courseId) {\r\n    return fetch(this.COURSE_URL + '/' + courseId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findModulesForCourse(courseId) {\r\n    return fetch\r\n    ('https://webdev-zhao-huang-summer2018.herokuapp.com/api/course/'\r\n      + courseId + '/module')\r\n      .then(response => response.json());\r\n  }\r\n\r\n}\r\n","export class EnrollmentServiceClient {\r\n\r\n  ENROLLMENT_URL = 'https://webdev-huang-nodejs-s18.herokuapp.com/api/student/STUDENTID/section';\r\n\r\n\r\n  enrollStudentInSection(sectionId, studentId) {\r\n    const url = this.ENROLLMENT_URL.replace('STUDENTID', studentId) + '/' + sectionId +'/enroll';\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  findSectionsForStudent(studentId) {\r\n    const url = this.ENROLLMENT_URL.replace('STUDENTID', studentId);\r\n    return fetch(url, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  deleteEnrollment(sectionId, studentId) {\r\n    const url = this.ENROLLMENT_URL.replace('STUDENTID', studentId) + '/' + sectionId;\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n}\r\n","export class LessonServiceClient {\r\n  findLessonsForModule(courseId,moduleId) {\r\n    return fetch('https://webdev-zhao-huang-summer2018.herokuapp.com/api/course/'+ courseId + '/module/' + moduleId + '/lesson')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class ModuleServiceClient {\r\n  MODULE_URL = 'https://webdev-zhao-huang-summer2018.herokuapp.com/api/course/COURSE_ID/module';\r\n  MODULEBYID_URL = 'https://webdev-zhao-huang-summer2018.herokuapp.com/api/module';\r\n  findModulesForCourse(courseId) {\r\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findModuleById(moduleId) {\r\n    return fetch(this.MODULEBYID_URL + '/' + moduleId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class SectionServiceClient {\r\n\r\n  SECTION_URL = 'https://webdev-huang-nodejs-s18.herokuapp.com/api/course/COURSEID/section';\r\n  CRUD_URL = 'https://webdev-huang-nodejs-s18.herokuapp.com/api/section/SECTIONID';\r\n\r\n\r\n\r\n  findSectionsForCourse(courseId) {\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findSectionById(sectionId){\r\n    return fetch(this.CRUD_URL.replace('SECTIONID', sectionId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  updateSectionById(sectionId, section){\r\n    return fetch(this.CRUD_URL.replace('SECTIONID', sectionId),\r\n      {\r\n        method:'post',\r\n        body: JSON.stringify(section),\r\n        credentials: 'include',\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteSectionById(sectionId){\r\n    return fetch(this.CRUD_URL.replace('SECTIONID', sectionId),\r\n      {\r\n        method:'delete',\r\n        credentials: 'include'\r\n      });\r\n  }\r\n\r\n  createSection(courseId, name, seats) {\r\n    const currentSeats = seats;\r\n    const maxSeats = seats;\r\n    const section = {courseId, name, seats, currentSeats, maxSeats};\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\r\n      method: 'post',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  DB_URL= \"https://webdev-huang-nodejs-s18.herokuapp.com\";\r\n\r\n\r\n  findUserByUsername(username){\r\n    return fetch(this.DB_URL + '/api/username/' + username)\r\n      .then(response => {\r\n        return response.json()\r\n      });\r\n  }\r\n  findUserById(userId){\r\n    return fetch(this.DB_URL + '/api/user/' + userId)\r\n      .then(response => {\r\n        return response.json()\r\n      });\r\n  }\r\n\r\n\r\n  updateUser(user){\r\n    return fetch(this.DB_URL + '/api/profile', {\r\n        body: JSON.stringify(user),\r\n        credentials: 'include', // include, same-origin, *omit\r\n        method: 'put',\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      }\r\n    )\r\n  }\r\n  login(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch(this.DB_URL + '/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(response =>\r\n        response.json()\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    return fetch(this.DB_URL + '/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n\r\n  profile() {\r\n    return fetch(this.DB_URL + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => {\r\n        return response.json();\r\n\r\n      });\r\n\r\n  }\r\n\r\n  createUser(username, password) {\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n      role:'student'\r\n    };\r\n    return fetch(this.DB_URL + '/api/register', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class WidgetServiceClient {\r\n  findWidgetsForLesson(courseId, moduleId,lessonId) {\r\n    return fetch('https://webdev-zhao-huang-summer2018.herokuapp.com/api/course/'\r\n      + courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/widget')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","module.exports = \".linkButton{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>\\n    White Board\\n  </h1>\\n  <hr>\\n  <div *ngIf='userId == \\\"\\\"'>\\n  <a routerLink=\\\"/login\\\"><button class=\\\"btn btn-primary\\\">Login</button></a>\\n  <a routerLink=\\\"/register\\\"><button class=\\\"btn btn-primary linkButton\\\">Register</button></a>\\n  </div>\\n  <div *ngIf='userId != \\\"\\\"'>\\n    <p>Welcome {{this.username}}!</p>\\n    <a routerLink=\\\"/profile\\\"><button class=\\\"btn btn-primary\\\">Profile</button></a>\\n    <a class=\\\"logout\\\" (click)=\\\"logout()\\\"><button class=\\\"btn btn-danger linkButton\\\">Logout</button></a>\\n  </div>\\n  <br>\\n  <app-course-grid></app-course-grid>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {EnrollmentServiceClient} from '../services/enrollment.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private enrollmentService: EnrollmentServiceClient,\n              private router: Router) {}\n\n\n  userId=\"\";\n  username;\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        this.username = user.username;\n        if (user._id != null && user._id != undefined) {\n          this.userId = user._id;\n        }\n      })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}